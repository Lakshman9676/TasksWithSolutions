Count Comparator:
package org.dailytasks.may18;
import  java.util.Comparator;
public class CountComparator implements Comparator<Integer> {
public int compare(Integer n1, Integer n2) {
	if(n1>=n2)
return -1;
		else if(n1<n2)
			return 1;
		else
return 0;
	}
}

String Comparator:
package org.dailytasks.may18;
import java.util.Comparator;

public class StringComparator implements Comparator<String> {

	public int compare(String s1, String s2) {
		if(s1.length()>=s2.length())
			return -1;
		else if(s1.length()<s2.length())
			return 1;
		else
			return 0;
	}
}

LargestReapetingSeqeuce:

package org.dailytasks.may18;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeMap;
public class LargestRepetative {
	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter String:");
		String str = sc.next();
		String sub[] = new String[1000];
		int p = 0;
		for(int i=0;i<str.length();i++)
			for(int k=1;k<=str.length()-i;k++){
				sub[p]=str.substring(i,i+k);
				p++;
			}
		TreeMap<Integer,String> hmp =  new TreeMap<Integer,String>(new CountComparator());
		for(int i=0;i<p;i++){
			String s = sub[i]; 
			if(hmp.containsValue(s))
				hmp.put(2,s);
			else
				hmp.put(1,s);
		}
		
		//System.out.println(hmp);
		TreeMap<String,Integer> mp =  new TreeMap<String,Integer>(new StringComparator());
		Set<Entry<Integer,String>> st = hmp.entrySet();
		Iterator<Entry<Integer,String>> ie = st.iterator();
		while(ie.hasNext()){
			Entry<Integer,String> en = ie.next();
			int valueofmp = en.getKey();
			String keyofmp = en.getValue();
			if(valueofmp>1)
				mp.put(keyofmp,valueofmp);
		}
		//System.out.println(mp);
		System.out.println("Output:-\n"+mp.firstKey());
	}
}
